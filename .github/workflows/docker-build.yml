name: Full CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

# Добавляем разрешения для GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write
  packages: write

jobs:
  # ========================================
  # ВАШ СУЩЕСТВУЮЩИЙ JOB + НЕБОЛЬШИЕ УЛУЧШЕНИЯ
  # ========================================
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js (для тестов)
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧹 Run linter
        run: npm run lint

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Ваш существующий логин в Docker Hub
      - name: 🔐 Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Ваша существующая генерация тегов
      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: elenasoshina/web_studio
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      # Ваша существующая сборка стандартной версии
      - name: 🏗️ Build and push standard version
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_PATH=/
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Ваша существующая сборка версии для GitHub Pages
      - name: 🏗️ Build and push GitHub Pages version
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          push: true
          tags: elenasoshina/web_studio:github-pages
          build-args: |
            BASE_PATH=/web_studio/
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ========================================
  # НОВЫЙ JOB: GITHUB PAGES ДЕПЛОЙ
  # ========================================
  deploy-github-pages:
    name: 🌐 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-and-push # Ждем завершения сборки
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build for GitHub Pages
        run: npm run build
        env:
          VITE_BASE_PATH: /web_studio/

      - name: 📋 Setup Pages
        uses: actions/configure-pages@v4

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # ========================================
  # НОВЫЙ JOB: УВЕДОМЛЕНИЯ
  # ========================================
  notify:
    name: 📢 Deployment Summary
    runs-on: ubuntu-latest
    needs: [build-and-push, deploy-github-pages]
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
      - name: 📊 Create Summary
        run: |
          echo "## 🎯 CI/CD Results" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Docker Build | ${{ needs.build-and-push.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| GitHub Pages | ${{ needs.deploy-github-pages.result == 'success' && '✅ Success' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.deploy-github-pages.result }}" == "success" ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🌐 **Live Site**: https://elenasoshina.github.io/web_studio/" >> $GITHUB_STEP_SUMMARY
            echo "🐳 **Docker Image**: \`elenasoshina/web_studio:latest\`" >> $GITHUB_STEP_SUMMARY
          fi
