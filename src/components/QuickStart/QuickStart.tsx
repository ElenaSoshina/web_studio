import React, { useState } from 'react';
import styles from './QuickStart.module.css';

interface Package {
  id: number;
  title: string;
  price: string;
  features: string[];
  highlighted?: boolean;
  category: 'starter' | 'business';
}

interface ClientType {
  icon: string;
  title: string;
  description: string;
  subtitle: string;
}

const QuickStart: React.FC = () => {
  const [activeTab, setActiveTab] = useState<'packages' | 'process'>('packages');

  const packages: Package[] = [
    {
      id: 1,
      title: '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç',
      price: '–æ—Ç 30 000 ‚ÇΩ',
      category: 'starter',
      features: [
        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥',
        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞',
        '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
        '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–∞—Ç–∞',
        '–ü–µ—Ä–≤–∏—á–Ω–æ–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º'
      ]
    },
    {
      id: 2,
      title: 'Telegram Bot + WebApp',
      price: '–æ—Ç 75 000 ‚ÇΩ',
      category: 'business',
      highlighted: true,
      features: [
        '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram –±–æ—Ç–∞',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º',
        '–°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
        '–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å',
        '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö',
        '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫'
      ]
    }
  ];

  const clientTypes: ClientType[] = [
    {
      icon: 'üöÄ',
      title: '–ù–∞—á–∏–Ω–∞—é—â–∏–º',
      subtitle: '–ü–µ—Ä–≤—ã–π —Å–∞–π—Ç',
      description: '–ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –æ–ø—ã—Ç–∞ —Å —Å–∞–π—Ç–∞–º–∏, –Ω–æ –Ω—É–∂–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–∂–µ —Å–µ–≥–æ–¥–Ω—è. –ú—ã –ø–æ–¥–±–µ—Ä–µ–º –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏ —Å–¥–µ–ª–∞–µ–º –≤—Å–µ –∑–∞ –≤–∞—Å.'
    },
    {
      icon: 'üìà',
      title: '–†–∞–∑–≤–∏–≤–∞—é—â–∏–º—Å—è', 
      subtitle: '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è',
      description: '–í–∞—à —Å–∞–π—Ç —É—Å—Ç–∞—Ä–µ–ª? –ù—É–∂–µ–Ω —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –±–µ–∑ –¥–æ–ª–≥–æ–≥–æ –æ–∂–∏–¥–∞–Ω–∏—è? –ì–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ–º–æ–≥—É—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –∑–∞ –Ω–µ–¥–µ–ª—é.'
    },
    {
      icon: 'üè¢',
      title: '–†–∞—Å—Ç—É—â–∏–º',
      subtitle: '–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–ù–æ–≤—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–∞–π—Ç—ã, –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã? –ü–æ–¥–±–µ—Ä–µ–º —Ä–µ—à–µ–Ω–∏–µ –≤ –¥–µ–Ω—å –æ–±—Ä–∞—â–µ–Ω–∏—è.'
    }
  ];

  const processSteps = [
    {
      step: '01',
      title: '–í—ã–±–æ—Ä —Ä–µ—à–µ–Ω–∏—è',
      description: '–í—ã–±–∏—Ä–∞–µ—Ç–µ –≥–æ—Ç–æ–≤—ã–π –¥–∏–∑–∞–π–Ω –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–¥ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏',
      icon: 'üé®'
    },
    {
      step: '02', 
      title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞',
      description: '–í—ã–±–∏—Ä–∞–µ–º –¥–æ–º–µ–Ω, —Ö–æ—Å—Ç–∏–Ω–≥ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é —á–∞—Å—Ç—å',
      icon: '‚öôÔ∏è'
    },
    {
      step: '03',
      title: '–ö–æ–Ω—Ç–µ–Ω—Ç',
      description: '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ —Ç–µ–∫—Å—Ç—ã, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è',
      icon: 'üìù'
    },
    {
      step: '04',
      title: '–ó–∞–ø—É—Å–∫',
      description: '–û—Å—Ç–∞–ª—å–Ω–æ–µ –¥–µ–ª–∞–µ–º –º—ã! –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç',
      icon: 'üöÄ'
    }
  ];

  return (
    <section className={styles.quickStartSection} id="quick-start">
      {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω –∫–∞–∫ –≤ –¥—Ä—É–≥–∏—Ö —Å–µ–∫—Ü–∏—è—Ö */}
      <div className={styles.futuristicBackground}>
        <div className={styles.gridPattern}></div>
      </div>

      <div className={styles.container}>
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ –≤ –µ–¥–∏–Ω–æ–º —Å—Ç–∏–ª–µ */}
        <div className={styles.sectionHeader}>
          <h2 className={styles.sectionTitle}>
            <span className={styles.bracket}>{'<'}</span>
            <span className={styles.titleText}>–ì–û–¢–û–í–´–ï –†–ï–®–ï–ù–ò–Ø</span>
            <span className={styles.bracket}>{'/>'}</span>
          </h2>
          <p className={styles.sectionSubtitle}>
            –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ –í–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞
          </p>
          <div className={styles.highlightBadge}>
            <span className={styles.badgeText}>–°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ 7 –¥–Ω–µ–π</span>
            <span className={styles.badgePrice}>–æ—Ç 30 000‚ÇΩ</span>
          </div>
        </div>

        {/* –¢–∞–±—ã */}
        <div className={styles.tabs}>
          <button 
            className={`${styles.tab} ${activeTab === 'packages' ? styles.active : ''}`}
            onClick={() => setActiveTab('packages')}
          >
            üíº –ì–æ—Ç–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
          </button>
          <button 
            className={`${styles.tab} ${activeTab === 'process' ? styles.active : ''}`}
            onClick={() => setActiveTab('process')}
          >
            üîÑ –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã
          </button>
        </div>

        {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ç–∞–±–æ–≤ */}
        {activeTab === 'packages' && (
          <div className={styles.packagesContent}>
            {/* –¢–∏–ø—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ */}
            <div className={styles.clientTypes}>
              <h3 className={styles.subsectionTitle}>–ù–∞—à–∏ —Ä–µ—à–µ–Ω–∏—è –ø–æ–¥–æ–π–¥—É—Ç:</h3>
              <div className={styles.clientGrid}>
                {clientTypes.map((client, index) => (
                  <div key={index} className={styles.clientCard}>
                    <div className={styles.clientIcon}>{client.icon}</div>
                    <div className={styles.clientContent}>
                      <h4 className={styles.clientTitle}>{client.title}</h4>
                      <div className={styles.clientSubtitle}>{client.subtitle}</div>
                      <p className={styles.clientDescription}>{client.description}</p>
                    </div>
                  </div>
                ))}
              </div>
            </div>

            {/* –ü–∞–∫–µ—Ç—ã —É—Å–ª—É–≥ */}
            <div className={styles.packagesGrid}>
              {packages.map((pkg) => (
                <div 
                  key={pkg.id} 
                  className={`${styles.packageCard} ${pkg.highlighted ? styles.highlighted : ''}`}
                >
                  {pkg.highlighted && (
                    <div className={styles.popularBadge}>
                      ‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–π
                    </div>
                  )}
                  
                  <div className={styles.packageHeader}>
                    <h3 className={styles.packageTitle}>{pkg.title}</h3>
                    <div className={styles.packagePrice}>{pkg.price}</div>
                  </div>
                  
                  <div className={styles.packageFeatures}>
                    {pkg.features.map((feature, index) => (
                      <div key={index} className={styles.feature}>
                        <span className={styles.featureIcon}>‚úÖ</span>
                        <span className={styles.featureText}>{feature}</span>
                      </div>
                    ))}
                  </div>
                  
                  <button className={styles.packageBtn}>
                    <span>üöÄ</span>
                    –ó–∞–∫–∞–∑–∞—Ç—å
                  </button>
                </div>
              ))}
            </div>
          </div>
        )}

        {activeTab === 'process' && (
          <div className={styles.processContent}>
            <h3 className={styles.subsectionTitle}>–ß—Ç–æ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç –≤–∞—Å?</h3>
            <div className={styles.processSteps}>
              {processSteps.map((step, index) => (
                <div key={index} className={styles.processStep}>
                  <div className={styles.stepNumber}>{step.step}</div>
                  <div className={styles.stepIcon}>{step.icon}</div>
                  <div className={styles.stepContent}>
                    <h4 className={styles.stepTitle}>{step.title}</h4>
                    <p className={styles.stepDescription}>{step.description}</p>
                  </div>
                  {index < processSteps.length - 1 && (
                    <div className={styles.stepConnector}></div>
                  )}
                </div>
              ))}
            </div>
            
            <div className={styles.processFooter}>
              <div className={styles.guaranteeBox}>
                <div className={styles.guaranteeIcon}>‚ö°</div>
                <div className={styles.guaranteeText}>
                  <h4>–û—Å—Ç–∞–ª—å–Ω–æ–µ —Å–¥–µ–ª–∞–µ–º –º—ã!</h4>
                  <p>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞, —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫</p>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </section>
  );
};

export default QuickStart; 